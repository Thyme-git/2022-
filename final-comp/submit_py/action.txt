TAKE-ACTION(PRO, CON):
    # PRO表示己方选手， CON表示敌方选手
    # PRO:list, CON:list

    # 将己方选手同距离近的对手对应起来，方便追击
    if len(PRO) + len(CON) >= 3:
        if len(PRO) == 1:
            if Distance(PRO[0], CON[0]) > Distance(PRO[0], CON[1]):
                Switch(CON[0], CON[1])
        else:
            if Distance(PRO[0], CON[0]) > Distance(PRO[1], CON[0]):
                Switch(PRO[0], PRO[1])

    for p in  PRO:
        # hp <= 60 时做的策略
        # 追击目标优先级： hp_buff > speed_buff > vacant_space > competitor
        if p.hp <= 60:
            if there is hp_buff:
                let p chase for hp_buff
            else if there is speed_buff:
                let p chase for speed_buff
            else if there is vacant_space:
                let p chase for vacant_space
            else if there is competitor:
                let p chase for competitor
            else
                let p take a random step
        

        # hp > 60 时做的策略
        # 追击目标优先级： competitor > speed_buff > hp_buff > vacant_space
        else if p.hp > 60:
            if there is competitor:
                let p chase for competitor
            else if there is speed_buff:
                let p chase for speed_buff
            else if there is hp_buff and p.hp != 100:
                let p chase for hp_buff
            else if there is vacant_space:
                let p chase for vacant_space
            else
                let p take a random step
        
    # 防止两个队友重位
    if len(PRO) == 2 and Distance(PRO[0], PRO[1]) is too short:
        let PRO[1] get away from PRO[0]